/* =====================
 * flex container('box' for short) & flex item
 * ========================================================*/
$flex-level: flex;
$flex-direction: row;
$flex-justify-content: space-around;
$flex-align-items: center;
$flex-align-content: center;
$flex-wrap: wrap;
@mixin flex-box(
  $level: $flex-level,
  $direction: $flex-direction,
  $justify-content: $flex-justify-content,
  $align-items: $flex-align-items,
  $align-content: $flex-align-content,
  $wrap: $flex-wrap) {
    display: $level;
    flex-direction: $direction;
    justify-content: $justify-content;
    align-items: $align-items;
    align-content: $align-content;
    flex-wrap: $wrap;
}

// `flex` shorthand declarations with unitless `flex-basis` values are ignored
@mixin flex-item(
  $grow: null,
  $shrink: null,
  $basis: null) {
    $arg-len: length($grow);
    @if ($arg-len > 1) {
      $basis: if($arg-len == 3, nth($grow, 3), $basis);
      $shrink: nth($grow, 2);
      $grow: nth($grow, 1);
    }
    flex-grow: $grow;
    flex-shrink: $shrink;
    flex-basis: $basis;
}
/* =====================
 * global flex classes, only use in html to overwrite default declarations
 * ------------------------------
 * .frow: block level flexbox with default rules.
 * .f-jc-sb {
 *   justify-content: space-between;
 * }
 * ......
 * ========================================================*/
$global-flex-def:
  ('.frow', flex, row),
  ('.fcol', flex, column),
  ('.ifrow', inline-flex, row),
  ('.ifcol', inline-flex, column);
@each $selector, $level, $direction in $global-flex-def {
  :global(#{$selector}) {
    @include flex-box($level, $direction)
  }
}

$flex-rule-vals-map: (
  'fs': flex-start,
  'fe': flex-end,
  'c':  center,
  'sb': space-between,
  'sa': space-around,
  'b': baseline,
  's': stretch,
  'w': wrap,
  'nw': no-wrap,
  'wr': wrap-reverse,
  'a': auto
);
$flex-rules-map:
  ('jc', justify-content, ('fs', 'fe', 'c', 'sb', 'sa')),
  ('ai', align-items, ('fs', 'fe', 'c', 'b', 's')),
  ('ac', align-content, ('fs', 'fe', 'c', 'sb', 'sa', 's')),
  ('as', align-self, ('fs', 'fe', 'c', 'b', 's', 'a')),
  ('fw', flex-wrap, ('w', 'nw', 'wr'));
@each $rule-selector, $rule, $vals in $flex-rules-map {
  @each $val in $vals {
    :global(.f-#{$rule-selector}-#{$val}) {
      #{$rule}: map-get($flex-rule-vals-map, $val);
    }
  }
}
